@model Loginapplication.Models.Employee

@*@{
        ViewBag.Title = "EditEmp";
    }*@



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <br />
    <div class="form-horizontal">
        <h5 class="text-center text-primary font-weight-bold">Edit Employee Details</h5>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)

        <br />


        <div class="row">
            <div class="col-md-4">
                <div class="form-group md-form">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @for = "txtname" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtname" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group md-form">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @for = "txtdesc" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "txtdesc" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsEmployeeRetired, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsEmployeeRetired)
                            @Html.ValidationMessageFor(model => model.IsEmployeeRetired, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group ">
                    @if (ViewBag.CountryList != null)
                    {
                        <label>Country</label>
                        @Html.DropDownListFor(m => m.CountryId, ViewBag.CountryList as SelectList, "-- Select Country--", new { @class = "form-control" })
                    }
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>State</label>
                    @if (ViewBag.StatesList != null)
                    {
                        @Html.DropDownListFor(m => m.StateId, ViewBag.StatesList as SelectList, "--Select State--", new { @class = "form-control" })
                    }
                    else
                    {

                        @Html.DropDownListFor(m => m.StateId, new SelectList(""), "--Select State--", new { @class = "form-control" })

                    }

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group md-form">
                    @Html.LabelFor(model => model.Company, htmlAttributes: new { @for = "txtcom" })
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", @id = "txtcom" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group md-form">
                    @Html.LabelFor(model => model.EmpDate, htmlAttributes: new { @for = "datepicker" })
                    @Html.TextBoxFor(model => model.EmpDate, new { @class = "form-control", @id = "datepicker", @readonly = true })
                    @Html.ValidationMessageFor(model => model.EmpDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>





        <div class="form-group">
            <div class="text-center col-md-12">
                <button type="submit" class="btn btn-primary btn-md ">Submit</button>
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button type="button" class="btn btn-md btn-primary" onclick="location.href='/Home/Contact'">Cancel</button>
            </div>
        </div>
        <br />
        @*<div>
            @Html.ActionLink("Back to List", "Contact")
        </div>
        <br />*@
    </div>
}

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>

    $(document).ready(function () {

        $("#datepicker").datepicker({
            //autoclose: true,
            //todayHighlight: true
            todayHighlight: true,
            autoUpdateInput: false,
            singleDatePicker: true,
            showDropdowns: true,
            yearRange: "-100:+100",
            format: 'mm/dd/yyyy',
            setDate: new Date(),
            locale: {
                cancelLabel: 'Clear'
            }
        });
        

        $("#CountryId").change(function () {

            var countryId = $(this).val();
            //debugger
            $.ajax({

                type: "Post",
                url: "/Home/GetStateList?CountryId=" + countryId,
                contentType: "html",
                success: function (response) {
                    //debugger
                    $("#StateId").empty();
                    $("#StateId").append(response);

                }

            });

        });

    });

</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
